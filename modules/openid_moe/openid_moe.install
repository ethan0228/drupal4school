<?php
/**
 * @file
 * Install, update and uninstall functions for the openid_provider_ax module.
 *
 */

/**
 * Implements hook_enable().
 */
function openid_moe_enable() {
  $schema = variable_get('simsauth_server_schema');
  if (!empty($schema)) {
    variable_set('openid_moe_school_id', substr($schema, 1-strlen($schema)));
  }
}

/**
 * Implements hook_disable().
 */
function openid_moe_disable() {
  variable_del('openid_moe_school_id');
}

/**
 * Implements hook_schema().
 */
function openid_moe_schema() {
  $schema['openid_moe'] = array(
    'description' => 'Connect profiles to the relying parties.',
    'fields' => array(
      'uid' => array(
        'description' => 'The user identifier.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'claimed_id' => array(
        'description' => 'The OpenID the user claimed.',
        'type' => 'varchar',
        'length' => '256',
        'not null' => TRUE,
        'default' => '',
      ),
      'request' => array(
        'description' => 'The attributes that were requested by the relying party.',
        'type' => 'text',
        'not null' => TRUE,
      ),
      'response' => array(
        'description' => 'The attributes that were the response to the relying party.',
        'type' => 'text',
        'not null' => TRUE,
      ),
      'update_url' => array(
        'description' => 'The URL of the relying party where the updated attributes should be sent to.',
        'type' => 'varchar',
        'length' => '256',
        'not null' => TRUE,
      ),
    ),
    'indexes' => array(
      'uid' => array('uid'),
      'claimed_id' => array('claimed_id'),
      'update_url' => array('update_url'),
    ),
  );
  return $schema;
}

