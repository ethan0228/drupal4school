<?php

use Drupal\Core\Url;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Session\UserSession;
use Drupal\user\Entity\User;
use Symfony\Component\HttpFoundation\Session;
use Symfony\Component\HttpFoundation\RedirectResponse;

require 'tpedu.api.php';

function tpedu_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'admin/config/people/tpedu':
      $output = '<p>本模組提供兩種不同功能：使用臺北市教育人員單一身分驗證帳號登入、介接學校全域資料。請先向教育局申請介接專案，完成模組設定後，才能啟用模組。</p>';
      return $output;
  }
}

function tpedu_user_load(array $entities) {
    $config = \Drupal::config('tpedu.settings');
    if (!$config->get('enable')) return;
    foreach ($entities as $account) {
        if ($account->get('init')->value == 'tpedu') {
            $uuid = $account->get('uuid')->value;
            $user = get_user($uuid);
            $account->tpedu = $user;
        }
    }
}

function tpedu_user_format_name_alter(&$name, $account) {
    $config = \Drupal::config('tpedu.settings');
    if (!$config->get('enable')) return;
    $user = User::load($account->id());
    if (isset($user->tpedu)) {
        if ($user->tpedu->student) {
            if ($config->get('display_unit') || $config->get('display_title')) $name = $user->tpedu->dept_name.' ';
        } else {
            $name = '';
            if ($config->get('display_unit')) $name = $user->tpedu->dept_name.' ';
            if ($config->get('display_title')) $name .= $user->tpedu->role_name.' ';
        }
        if ($user->tpedu->realname) $name .= $user->tpedu->realname;
    }
}

function tpedu_form_user_login_form_alter(&$form, FormStateInterface $form_state, $form_id) {
    $config = \Drupal::config('tpedu.settings');
    if ($config->get('enable')) {
        unset($form['links']);
        if (!$config->get('allow_default_login')) {
            unset($form['name']);
            unset($form['pass']);
        }
        $form['submit_tpedu'] = array(
            '#type' => 'html_tag',
            '#tag' => 'img',
            '#attributes' => array(
                'src' => '//'. $_SERVER['HTTP_HOST'] .'/'. drupal_get_path('module', 'tpedu') . '/tpedusso.png',
                'style' => 'cursor: pointer; border:none; width:240px;',
                'title' => '使用臺北市教育人員單一身分驗證登入',
                'onclick' => 'tpedussoAuth();'
            ),
        );
        if ($config->get('personal_data_notice')) {
            $form['extra_info'] = array(
                '#markup' => '<p>我已經閱讀貴網站<a href="/personal_data_notice">個人資料收集政策</a>，我同意貴網站取得我的個人資料！</p>',
            );
        }
        $form['#attached']['library'][] = 'tpedu/tpedusso';
        $form['#attached']['drupalSettings']['tpedu']['tpedusso'] = array(
            'clientId' => $config->get('client_id'),
            'callBack' => $config->get('call_back'),
        );
    }
}

function tpedu_form_user_login_block_alter(&$form, FormStateInterface $form_state, $form_id) {
    tpedu_form_user_login_form_alter($form, $form_state, $form_id);
}

function tpedu_form_user_form_alter(&$form, FormStateInterface $form_state, $form_id) {
    $config = \Drupal::config('tpedu.settings');
    if ($config->get('enable')) {
        $user = $form_state->getFormObject()->getEntity();
        if ($user->get('init')->value == 'tpedu') {
            unset($form['account']['current_pass']);
            unset($form['account']['mail']);
            unset($form['account']['name']);
            unset($form['account']['pass']);    
        }
    }
}

function tpedu_user_login($account) {
    $redirect = \Drupal::config('tpedu.settings')->get('login_goto_url');
    if ($redirect) {
        return new RedirectResponse(Url::fromRoute($redirect));
    }
}

function tpedu_user_logout($account) {
    $redirect = \Drupal::config('tpedu.settings')->get('logout_goto_url');
    if ($redirect) {
        return new RedirectResponse(Url::fromRoute($redirect));
    }
}

function tpedu_user_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {
    $config = \Drupal::config('tpedu.settings');
    if ($config->get('enable')) {
        $user = get_user($entity->id());
        $build['birthday'] = array(
            '#type' => 'item',
            '#title' => '出生日期',
            '#markup' => date('Y-m-d', strtotime($user->birthdate)),
        );
        $build['gender'] = array(
            '#type' => 'item',
            '#title' => '性別',
            '#markup' => ($user->gender == 2) ? '女' : '男',
        );
        if ($user->student) {
            $build['stdno'] = array(
                '#type' => 'item',
                '#title' => '學號:',
                '#markup' => $user->id,
            );
            $build['classname'] = array(
                '#type' => 'item',
                '#title' => '就讀班級',
                '#markup' => $user->dept_name,
            );
            $build['seat'] = array(
                '#type' => 'item',
                '#title' => '座號',
                '#markup' => $user->seat,
            );
        } else {
            $build['depname'] = array(
                '#type' => 'item',
                '#title' => '行政部門',
                '#markup' => $user->dept_name,
            );
            $build['titlename'] = array(
                '#type' => 'item',
                '#title' => '職稱',
                '#markup' => $user->role_name,
            );
            if (!empty($user->tpedu->class)) {
                $build['proclass'] = array(
                    '#type' => 'item',
                    '#title' => '導師班級',
                    '#markup' => $user->class,
                );
            }
        }
        $build['email'] = array(
            '#type' => 'item',
            '#title' => '電子郵件',
            '#markup' => $user->email,
        );
    }
}

function tpedu_theme($existing, $type, $theme, $path) {
    return [		
        'tpedu_personal_data_notice' => [
            'variables' => [],
        ],
    ];
}

function tpedu_process_html(&$vars) {
    $vars['page_top'] = Accessibility_for_taiwan($vars['page_top']);
    $vars['page_bottom'] = Accessibility_for_taiwan($vars['page_bottom']);
    $vars['page'] = Accessibility_for_taiwan($vars['page']);
}

$tab_index = 1;
function tpedu_for_taiwan($content) {
  global $tab_index;
  $dom = new DOMDocument;
  libxml_use_internal_errors(true);
  $dom->loadHTML('<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />'.$content);
  $images = $dom->getElementsByTagName('img');
  $links = $dom->getElementsByTagName('a');
  $objs = $dom->getElementsByTagName('object');
  $applets =  $dom->getElementsByTagName('applet');
  $img_maps = $dom->getElementsByTagName('area');
  $ems = $dom->getElementsByTagName('i');
  $strongs = $dom->getElementsByTagName('b');
  $tables = $dom->getElementsByTagName('table');
  $table_headers = $dom->getElementsByTagName('th');
  foreach ($images as $img) {
    $myalt=$img->getAttribute('alt');
    if (!$myalt) $img->setAttribute('alt','排版用裝飾圖片');
  }
  foreach ($links as $lnk) {
    $mytitle=$lnk->getAttribute('title');
    if (!$mytitle) $lnk->setAttribute('title', $lnk->nodeValue);
    $lnk->setAttribute('tabindex', $tab_index);
    $tab_index++;
  }
  foreach ($objs as $obj) {
    $myalt=$obj->nodeValue;
    if (!$myalt) $obj->nodeValue=$obj->getAttribute('data');
  }
  foreach ($applets as $app) {
    $myalt=$app->nodeValue;
    if (!$myalt) {
      $app->setAttribute('alt', '多媒體互動物件');
      $app->nodeValue='多媒體互動物件';
    }
    else {
      $app->setAttribute('alt', $myalt);
    }
  }
  foreach ($img_maps as $area) {
    $myalt=$area->getAttribute('alt');
    if (!$myalt) $area->setAttribute('alt',$area->getAttribute('href'));
  }
  foreach ($ems as $em) {
    $newem=$dom->createElement('em',$em->nodeValue);
    $em->parentNode->replaceChild($newem, $em);
  }
  foreach ($strongs as $strong) {
    $newstrong=$dom->createElement('strong',$strong->nodeValue);
    $strong->parentNode->replaceChild($newstrong, $strong);
  }
  foreach ($tables as $table) {
    $mytitle=$table->getAttribute('title');
    $mysummary=$table->getAttribute('summary');
    $caption=FALSE;
    if ($table->hasChildNodes()) {
      if ($table->firstChild->nodeName=='caption') $caption=$table->firstChild->nodeValue;
    }
    if (!$mytitle && $caption) $table->setAttribute('title',$caption);
    if (!$mysummary && $caption) $table->setAttribute('summary',$caption);
    if (!$mytitle && !$mysummary && !$caption) $table->setAttribute('summary','排版用表格');
  }
  foreach ($table_headers as $myth) {
    $myscope=$myth->getAttribute('scope');
    $myheaders=$myth->getAttribute('headers');
    if (!$myscope && !$myheaders) $myth->setAttribute('scope','col');
  }
  $content = $dom->saveHTML();
  $content = preg_replace('/<!DOCTYPE .+>/', '', preg_replace('/<meta .+?>/', '', str_replace( array('<html>', '</html>', '<head>', '</head>', '<body>', '</body>'), array('', '', '', '', '', ''), $content)));
  return $content;
}

function tpedu_field_info(array &$info) {
    $info['sims_field_syear'] = array(
        'label' => t('School Year & Semester'),
        'description' => t("This field choise school year and/or semester depend on IBM DB2 Database."),
        'settings' => array('allowed_values_function' => 'sims_field_options_list', 'include_semester' => ''),
        'instance_settings' => array('syear_range' => '0:+1', 'inline_columns' => 2),
        'default_widget' => 'options_select',
        'default_formatter' => 'sims_default',
        'cardinality' => 0,
    );
    $info['sims_field_classes'] = array(
        'label' => t('List (classes)'),
        'description' => t("This field stores CLASSID data from IBM DB2 BASCLS table."),
        'settings' => array('allowed_values_function' => 'sims_field_options_list'),
        'instance_settings' => array('filter_by_current_semester' => 1, 'filter_by_current_user' => 0, 'inline_columns' => 10),
        'default_widget' => 'options_select',
        'default_formatter' => 'sims_default',
    );
    $info['sims_field_department'] = array(
        'label' => t('List (departments)'),
        'description' => t("This field stores DEPT_ID data from IBM DB2 SCHDEPT table."),
        'settings' => array('allowed_values_function' => 'sims_field_options_list'),
        'instance_settings' => array('inline_columns' => 5),
        'default_widget' => 'options_select',
        'default_formatter' => 'sims_default',
    );
    $info['sims_field_domain'] = array(
        'label' => t('List (domains)'),
        'description' => t("This field stores POS_ID data from IBM DB2 SCHPOSITION table."),
        'settings' => array('allowed_values_function' => 'sims_field_options_list', 'specific_department' => ''),
        'instance_settings' => array('inline_columns' => 5),
        'default_widget' => 'options_select',
        'default_formatter' => 'sims_default',
    );
    $info['sims_field_students'] = array(
        'label' => t('List (students)'),
        'description' => t("This field stores specific column data from IBM DB2 STUDENT table."),
        'settings' => array('allowed_values_function' => 'sims_field_options_list', 'specific_column' => ''),
        'instance_settings' => array('filter_by_current_semester' => 1, 'filter_by_class_field' => 1, 'specific_class' => '', 'inline_columns' => ''),
        'default_widget' => 'options_buttons',
        'default_formatter' => 'sims_default',
    );
    $info['sims_field_teachers'] = array(
        'label' => t('List (teachers)'),
        'description' => t("This field stores specific column data from IBM DB2 TEABAS table."),
        'settings' => array('allowed_values_function' => 'sims_field_options_list', 'specific_column' => ''),
        'instance_settings' => array('filter_by_current_semester' => 1, 'filter_by_class_field' => 1, 'filter_by_department_field' => 1, 'filter_by_domain_field' => 1, 'specific_class' => '', 'specific_department' => '', 'specific_domain' => '', 'inline_columns' => 5),
        'default_widget' => 'options_buttons',
        'default_formatter' => 'sims_default',
    );
}
  